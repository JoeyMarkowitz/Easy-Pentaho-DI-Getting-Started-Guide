{"name":"Pdi getting started guide","tagline":"Getting started guide for Pentaho Community Data Integration","body":"Easy install guide for getting a simple base install of Pentaho Community Data Integration software up and running\r\n\r\n## Overview\r\nThis guide will get you up and running with a pentaho data integration installation so you can get to what is important quickly, building transforms!\r\n\r\npostgres is natively supported by pentaho (easiest way to get started).  we are going to setup pentaho data integration with a test job that will run every hour and execute a test transformation.  the data integration server (carte) will link to a repository in a postgres db.  \r\n\r\n### Pentaho Software\r\n* spoon   - desktop app\r\n* pan     - CLI execute transforms or export repository to xml file (local)\r\n* kitchen - CLI execute jobs (local)\r\n* carte   - remote execute jobs & transforms\r\n\r\n\r\n## Install\r\n### Setup new user in linux to run PDI\r\n create new user **pentaho** on the remote server to run the carte server\r\n\r\n### install Pentaho data integration client\r\nas of 2015.03.10 this is the download location of the pentane community version\r\nhttp://community.pentaho.com/projects/data-integration/\r\nthis file extracted into a folder called data-integration\r\n\r\n### install postgres\r\n#### centos\r\n  ###\r\n  # INSTALL\r\n  ###\r\n  # source: https://wiki.postgresql.org/wiki/YUM_Installation\r\n  # postgresql92 - PostgreSQL client programs and libraries\r\n  # postgresql92-server - The programs needed to create and run a PostgreSQL server\r\n\r\n    sudo yum install postgresql92 postgresql92-server postgresql92-contrib\r\n    sudo service postgresql-9.2 initdb\r\n\r\n#### ubuntu\r\n  TBD\r\n\r\n\r\n## Configure\r\n### Postgres Server\r\n#### update connection permissions \r\n    # File: (/var/lib/pgsql/9.2/data/pg_hba.conf)\r\n    # add the following to the config\r\n    # IPv4 local connections:\r\n    host    all             all             127.0.0.1/32            ident\r\n    host    all             all             0.0.0.0/0   \t    \tmd5\r\n\r\n\r\n#### update port and listen to external ip addresses\r\n    # File: (/var/lib/pgsql/9.2/data/postgresql.conf)\r\n    listen_addresses = '*'          \t# what IP address(es) to listen on;\r\n                                        # comma-separated list of addresses;\r\n                                        # defaults to 'localhost'; use '*' for all\r\n                                        # (change requires restart)\r\n    port = 5433                         # (change requires restart)\r\n\r\nsudo service postgresql-9.2 restart\r\n\r\n\r\n  ###\r\n  # SETUP DATABASE\r\n  ###\r\n  sudo postgres\r\n  psql\r\n  CREATE DATABASE pdi_repository;\r\n  CREATE USER pentaho LOGIN PASSWORD 'pentahopassword';\t\t#defaults with login permission enabled\r\n  GRANT ALL ON DATABASE pdi_repository TO pentaho;\r\n\r\n  #list databases with \\l;\r\n  #list tables with \\dt;\r\n  #list roles with \\du;\r\n\r\n\r\nSummary Connection Info\r\nIP: localhost or 127.0.0.1\r\nPORT: 5432 (default)\r\nUSR: pentaho\r\nPWD: pentahopassword\r\nDB: pdi_repository\r\n\r\n\r\n\r\ncreate data integration repository (postgres)\r\n===================================\r\n\r\nin spoon\r\n1) go to the Repository Connections Dialog (Tools > Repository > Connect or command-E)\r\n2) create new repository (click green + in top right)\r\n3) select the type of repository to create (\"Kettle database repository\")\r\n4) create a new db connection (click NEW)\r\n5) see screen shot\r\nSection in top left: General\r\nConnection Name: localhost_postgres_db\r\nConnection Type: PostgreSQL\r\nHost Name: localhost (ip from previous section)\r\nDatabase Name: pdi_repository (from previous section)\r\nPort Number: 5432\r\nUser Name: pentaho (from previous section)\r\nPassword: pentahopassword (from previous section)\r\n\r\n\r\ncreate db connection\r\ncreate new db in postgres called xyz\r\nconnect to pg db and create repository\r\n  this will create the repository tables in the database and populate the ~/.kettle/repositories.xml file\r\n\r\nimport repository.xml\r\n\r\n\r\n\r\nsetup slave server connection in spoon\r\n=======================================\r\nclick slave tab\r\nclick green +\r\nServer name: Some Slave Server Name\r\nHostname or IP address: localhost\r\nPort: 8081\r\nWeb App Name (required for DI Server): BLANK\r\nUsername: cluster\r\nPassword: cluster\r\nIs the master: checked\r\n\r\n\r\n\r\nsetup slave server (carte)\r\n==========================\r\n\r\non the remote computer where carte will run, put the configuration.xml file into ~/data-integration/configuration.xml\r\n\r\nstart slave server\r\n./carte.sh configuration.xml\r\n\r\n\r\n\r\ntest slave server up and running\r\n================================\r\nhttp://localhost:8081/kettle/status/\r\n\r\ndefault carte login\r\nUSR: cluster\r\nPWD: cluster\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntest setup\r\n===========\r\n\r\nCreate new transform\r\n  to keep things simple create a select now() in table input, and write that to a db with table output\r\n\r\ncreate job to call transform with a start and \r\ncurl --user cluster:cluster http://localhost:8081/kettle/runJob/?job=/cron_hourly&level=Debug\r\n\r\n\r\ndefault repository login\r\nUSR: admin\r\nPWD: admin\r\n\r\n\r\ndefault carte login\r\nUSR: cluster\r\nPWD: cluster\r\n\r\n\r\nrun the job remotely on carte via spoon\r\n# check db updated\r\nselect * from test_new_pentaho\r\n\r\n\r\n\r\nconfigure carte to access repository\r\n=====================================\r\ncopy ~/.kettle/repository.xml to data-integration folder on the remote server where carte will run\r\n\r\n\r\n\r\nOther info\r\n.kettle/shared.xml  - shared db connections\r\n\r\n\r\n\r\n\r\nconfigure carte to start with init script on system boot\r\n==========================================================\r\nhttp://techarena51.com/index.php/how-to-create-an-init-script-on-centos-6/\r\n","google":"UA-61210146-1","note":"Don't delete this file! It's used internally to help with page regeneration."}